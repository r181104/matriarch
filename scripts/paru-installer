#!/bin/sh

# Function to check if a command exists
command_exists() {
  command -v "$1" >/dev/null 2>&1
}

# Function to install paru if not present
install_paru() {
  if command_exists paru; then
    echo "paru is already installed"
    return 0
  fi

  echo "Installing paru AUR helper..."

  # Install prerequisites with pacman
  local prerequisites=(git base-devel)
  local missing_prereqs=()
  local rust_installed_during_process=0

  for pkg in "${prerequisites[@]}"; do
    if ! pacman -Q "$pkg" >/dev/null 2>&1; then
      missing_prereqs+=("$pkg")
    fi
  done

  # Check if rust is missing
  if ! pacman -Q rust >/dev/null 2>&1; then
    missing_prereqs+=(rust)
    rust_installed_during_process=1
  fi

  if [ ${#missing_prereqs[@]} -ne 0 ]; then
    echo "Installing prerequisites: ${missing_prereqs[*]}"
    sudo pacman -S --needed --noconfirm "${missing_prereqs[@]}" || {
      echo "Failed to install prerequisites: ${missing_prereqs[*]}"
      exit 1
    }
    echo "Prerequisites installed successfully"
  fi

  # Create temporary directory and install paru
  local temp_dir=$(mktemp -d)
  local current_dir=$(pwd)

  cd "$temp_dir" || {
    echo "Failed to create temporary directory"
    exit 1
  }

  echo "Cloning paru repository..."
  if git clone https://aur.archlinux.org/paru.git; then
    cd paru || {
      echo "Failed to enter paru directory"
      cd "$current_dir"
      rm -rf "$temp_dir"
      exit 1
    }

    echo "Building and installing paru..."
    if makepkg -si --noconfirm; then
      echo "paru installed successfully"

      # Remove rust if it was installed during this process
      if [ $rust_installed_during_process -eq 1 ]; then
        echo "Removing rustc as it was installed only for paru..."
        sudo pacman -Rns --noconfirm rust
      fi

      cd "$current_dir"
      rm -rf "$temp_dir"
      return 0
    else
      echo "Failed to build paru"
      cd "$current_dir"
      rm -rf "$temp_dir"
      exit 1
    fi
  else
    echo "Failed to clone paru repository"
    cd "$current_dir"
    rm -rf "$temp_dir"
    exit 1
  fi
}

# Install paru
install_paru
