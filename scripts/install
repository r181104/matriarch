#!/bin/sh

# Exit immediately if a command exits with a non-zero status.
set -e

# --- Functions ---

# Print a message to the console.
msg() {
  echo "=>" "$@"
}

# Print a warning message to the console.
warning() {
  echo "!!!" "$@"
}

# Back up a file or directory.
# If a backup already exists, it will be overwritten.
backup() {
  if [ -e "$1" ] || [ -L "$1" ]; then
    msg "Backing up $1 to $1.bak"
    # Use -f to overwrite existing backup
    mv -f "$1" "$1.bak"
  fi
}

# --- Main Script ---

# Check for sudo privileges
if ! sudo -v; then
  warning "Sudo privileges are required to run this script."
  exit 1
fi

# Ask for confirmation using POSIX-compliant `read`
printf "This script will install dotfiles and packages. Continue? (y/N) "
read -r response
case "$response" in
  [yY][eE][sS] | [yY]) ;;
  *)
    exit 1
    ;;
esac

# Install dependencies
msg "Installing dependencies (git, curl, stow)..."
sudo pacman -Syu --needed --noconfirm git curl stow

# Clone the repository
if [ ! -d "$HOME/mir" ]; then
  msg "Cloning the repository..."
  git clone https://github.com/r181104/mir.git "$HOME/mir"
else
  msg "Repository already exists at ~/mir. Skipping clone."
  msg "Pulling latest changes..."
  (cd "$HOME/mir" && git pull)
fi

cd "$HOME/mir"

# Run installer scripts
msg "Running installer scripts..."
cd scripts
chmod +x aur-installer arch-pkgs
./aur-installer
./arch-pkgs
cd ..

# Back up existing directories
msg "Backing up existing font and theme directories..."
backup "$HOME/.local/share/fonts"
backup "$HOME/.themes"

# Stow dotfiles
msg "Stowing dotfiles..."
# The --restow option unstows and then restows, which is useful for updating existing symlinks.
stow --restow .

msg "Installation complete. Please reboot your system."
